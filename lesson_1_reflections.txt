1) How did viewing a diff between two versions help you spot the bug

It is a lot easier, to see what has changed, 
because small changes within code is hard to see when you glance over it. 
You have to go line by line to check if it is equal. 
And even then we still miss a few mistakes here and there.
Using FC or DIFF you don't have to see what lines have changed, and can find the mistake much faster. 



2) How could having easy access to the entire history 
of a file make you more efficient programmer in the long term?

It has already been mentioned in a lesson. If you don't have to search the whole file, 
but can just compare them instead it will take a lot less time to do so.
That'll lead to less headaches and frustration and more productivity.



3) What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
- Commit have a purpose
- Commit works, since you don't commit broken code
- Easier to compare commits than it is to compare versions
- Less versions
Cons:
- Programmer might forget to commit, or already thinks he has committed



4) Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like google docs, treat each file separately?

Documents in Google docs don't have any connection like programming files do.
CSS can't do much without HTML, so it's required to have that one always backed up.
Also, if someone changes the HTML file while you edited CSS file you still have working commits.



5) How can you use the commands git log and git diff to view the history of files?

You get a list of commits using git log. Using git diff you can then see what has changed
within those files.



6) How might using version control make you more confident to make changes that could break something?
Using version control, you always have a saved copy of a previous version. 
That makes it easy to revert to previous versions and not lose any progress.



7) Now that you have your workspace set up. What do you want to try use git for?
For me to be able to revert to previous version makes me want to work on bigger programming projects!
I'm far more comfortable working on base code or making big changes without losing too much progress.





